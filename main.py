import discord
from discord.ext import commands
from discord import ui
from datetime import datetime
import json
import os
import pytz
from table2ascii import table2ascii as t2a, PresetStyle

intents = discord.Intents.default()
intents.messages = True
intents.guilds = True
ALLOWED_USERS = [852854008602820626, 810222269577953343]
    
class MyBot(discord.Client):
    def __init__(self, intents):
        super().__init__(intents=intents)
        self.tree = discord.app_commands.CommandTree(self)

bot = MyBot(intents)

DATA_FILE = 'inventory_data.json'


def load_inventory_data_2():
            try:
                with open('inventory_data_2.json', 'r') as file:
                    return json.load(file)
            except FileNotFoundError:
                return {"daily_rbprofit": {}}

        # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå JSON
def save_inventory_data_2(data):
            with open('inventory_data_2.json', 'w') as file:
                json.dump(data, file, indent=4)

def load_data():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, 'r') as f:
            data = json.load(f)
        return data.get('inventory', {}), data.get('daily_profit', {}), data.get('daily_buy', {}), data.get('log', [])
    else:
        return {}, {}, {}, []

inventory, daily_profit, daily_buy, log = load_data()

def save_data():
    with open(DATA_FILE, 'w') as f:
        json.dump({'inventory': inventory, 'daily_profit': daily_profit, 'daily_buy': daily_buy, 'log': log}, f)

def log_event(action, item_key, price, timestamp):
    log.append({
        "action": action,
        "item_key": item_key,
        "price": price,
        "timestamp": timestamp
    })
    save_data()

def is_user_allowed(interaction: discord.Interaction):
    return interaction.user.id in ALLOWED_USERS

LOG_CHANNEL_ID = 1322639267784167545  # ‡∏£‡∏∞‡∏ö‡∏∏ Channel ID ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á log

async def send_log_to_channel(bot, log_message):
    """‡∏™‡πà‡∏á log ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Channel ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏"""
    channel = bot.get_channel(LOG_CHANNEL_ID)
    if channel:
        await channel.send(log_message)

def get_thailand_time():
    tz = pytz.timezone('Asia/Bangkok')
    return datetime.now(tz).strftime("%Y-%m-%d %H:%M:%S")

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}')
    await bot.tree.sync()
    print("Commands synced!")

def update_item_keys():
    global inventory
    updated_inventory = {}
    unique_id_counter = 1  

    for name, items in inventory.items():
        items.sort(key=lambda x: x["unique_id"])

        for item in items:
            item["unique_id"] = unique_id_counter
            item_key = f"{unique_id_counter}. {name}" 
            item["item_key"] = item_key
            unique_id_counter += 1 

        updated_inventory[name] = items
    inventory = updated_inventory
    save_data()

@bot.tree.command(name="buy", description="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
async def buy(interaction: discord.Interaction, name: str, status: str, price: int):
    if not is_user_allowed(interaction):
        await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ!", ephemeral=True)
        return
    timestamp = get_thailand_time()

    if name not in inventory:
        inventory[name] = []

    inventory[name].append({
        "item_key": "",
        "status": status,
        "price": price,
        "unique_id": 0 
    })

    update_item_keys()

    date_today = datetime.now().strftime("%Y-%m-%d")
    if date_today in daily_buy:
        daily_buy[date_today] += price
    else:
        daily_buy[date_today] = price

    save_data()

    log_message = f"üõí **Buy Log**\n‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: `{name}`\n‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: `{status}`\n‡∏£‡∏≤‡∏Ñ‡∏≤: `{price}` ‡∏ö‡∏≤‡∏ó\n‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠: `{timestamp}`"
    await send_log_to_channel(bot, log_message)

    embed = discord.Embed(
        title="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        description=f"‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ {name} ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ {status} ‡∏£‡∏≤‡∏Ñ‡∏≤ {price} ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß!",
        color=discord.Color.green(),
    )
    embed.set_footer(text=f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠ {timestamp}")
    if not interaction.response.is_done():
        await interaction.response.send_message(embed=embed)

@bot.tree.command(name="sell", description="‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£")
async def sell(interaction: discord.Interaction, unique_id: int, price: int):
            if not is_user_allowed(interaction):
                await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ!", ephemeral=True)
                return
            timestamp = get_thailand_time()

            for name, items in inventory.items():
                for item in items:
                    if item["unique_id"] == unique_id:
                        buy_price = item["price"]
                        profit = price - buy_price

                        log_event("‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", item["item_key"], price, timestamp)

                        inventory[name].remove(item)

                        update_item_keys()

                        date = datetime.now().strftime("%Y-%m-%d")
                        if date in daily_profit:
                            daily_profit[date] += profit
                        else:
                            daily_profit[date] = profit

                        save_data()

                        log_message = (f"üí∏ **Sell Log**\n‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: `{item['item_key']}`\n"
                                       f"‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ã‡∏∑‡πâ‡∏≠): `{buy_price}` ‡∏ö‡∏≤‡∏ó\n"
                                       f"‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏Ç‡∏≤‡∏¢): `{price}` ‡∏ö‡∏≤‡∏ó\n"
                                       f"‡∏Å‡∏≥‡πÑ‡∏£: `{profit}` ‡∏ö‡∏≤‡∏ó\n"
                                       f"‡∏Ç‡∏≤‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠: `{timestamp}`")
                        await send_log_to_channel(bot, log_message)

                        embed = discord.Embed(
                            title="‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                            description=f"‡∏Ç‡∏≤‡∏¢ {item['item_key']} ‡πÑ‡∏î‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤ {price} ‡∏ö‡∏≤‡∏ó ‡∏Å‡∏≥‡πÑ‡∏£ {profit} ‡∏ö‡∏≤‡∏ó",
                            color=discord.Color.green(),
                        )
                        embed.set_footer(text=f"‡∏Ç‡∏≤‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠ {timestamp}")
                        if not interaction.response.is_done():
                            await interaction.response.send_message(embed=embed)

                        return

            embed = discord.Embed(
                title="‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                description=f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ {unique_id} ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£!",
                color=discord.Color.red(),
            )
            if not interaction.response.is_done():
                await interaction.response.send_message(embed=embed)

@bot.tree.command(name="profit", description="‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≥‡πÑ‡∏£‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
async def profit(interaction: discord.Interaction):
    timestamp = get_thailand_time()

    total_profit = sum(daily_profit.values())

    date_today = datetime.now().strftime("%Y-%m-%d")
    today_profit = daily_profit.get(date_today, 0)

    profit_arm = today_profit * 0.7
    profit_ex = today_profit * 0.3  

    embed = discord.Embed(
        title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡πÑ‡∏£",
        description=f"‡∏Å‡∏≥‡πÑ‡∏£‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ({date_today}): {today_profit} ‡∏ö‡∏≤‡∏ó\n"
                    f"‡∏û‡∏µ‡πà‡∏≠‡∏≤‡∏£‡πå‡∏°: {profit_arm} ‡∏ö‡∏≤‡∏ó\n"
                    f"‡πÄ‡∏≠‡πá‡∏Å: {profit_ex} ‡∏ö‡∏≤‡∏ó\n"
                    f"‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_profit} ‡∏ö‡∏≤‡∏ó",
        color=discord.Color.blue(),
    )
    embed.set_footer(text=f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠ {timestamp}")
    if not interaction.response.is_done():
        await interaction.response.send_message(embed=embed)

@bot.tree.command(name="wallet", description="‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå")
async def wallet(interaction: discord.Interaction):
    wallet_address = "LS1TSgMNapSBSrpadKPDnWn4MuwcLRf5dp"
    timestamp = get_thailand_time()

    embed = discord.Embed(
        title="‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå",
        description=f"‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤: `{wallet_address}`",
        color=discord.Color.blue(),
    )
    embed.set_footer(text=f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠ {timestamp}")

    if not interaction.response.is_done():
        await interaction.response.send_message(embed=embed)


@bot.tree.command(name="buy_report", description="‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà")
async def buy_report(interaction: discord.Interaction):
    timestamp = get_thailand_time()

    if not inventory:
        embed = discord.Embed(
            title="‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ!",
            color=discord.Color.red(),
        )
        if not interaction.response.is_done():
            await interaction.response.send_message(embed=embed)
        return

    table_header = ["‡πÄ‡∏•‡∏Ç", "‡∏ä‡∏∑‡πà‡∏≠", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", "‡∏£‡∏≤‡∏Ñ‡∏≤ (THB)", "‡∏£‡∏≤‡∏Ñ‡∏≤ (USD)"] 
    table_body = []
    total_spent = 0  

    for name, items in inventory.items():
        for item in items:
            if item.get("status") != "‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß": 
                price_usd = item['price'] / 30 
                table_body.append([item["unique_id"], name, item["status"], item["price"], round(price_usd, 2)])

                total_spent += item['price']

    if not table_body:
        embed = discord.Embed(
            title="‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ç‡∏≤‡∏¢!",
            color=discord.Color.red(),
        )
        if not interaction.response.is_done():
            await interaction.response.send_message(embed=embed)
        return

    output = t2a(
        header=table_header,
        body=table_body,
        style=PresetStyle.plain 
    )

    embed = discord.Embed(
        title="‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        description=f"```\n{output}\n```",
        color=discord.Color.blue(),
    )
    embed.add_field(name="‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡∏£‡∏ß‡∏°", value=f"‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_spent} ‡∏ö‡∏≤‡∏ó", inline=False)
    embed.set_footer(text=f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠ {timestamp}")

    if not interaction.response.is_done():
        await interaction.response.send_message(embed=embed)

@bot.tree.command(name="sell_report", description="‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
async def sell_report(interaction: discord.Interaction):
    timestamp = get_thailand_time()

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÉ‡∏ô log ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if not any(entry.get("action") == "‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤" for entry in log):
        embed = discord.Embed(
            title="‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢!",
            color=discord.Color.red(),
        )
        if not interaction.response.is_done():
            await interaction.response.send_message(embed=embed)
        return

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
    table_header = ["‡πÄ‡∏•‡∏Ç", "‡∏ä‡∏∑‡πà‡∏≠", "‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ã‡∏∑‡πâ‡∏≠)", "‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏Ç‡∏≤‡∏¢)", "‡∏Å‡∏≥‡πÑ‡∏£"]
    table_body = []
    total_sales = 0  # ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°
    total_profit = 0  # ‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°

    for entry in log:
        if entry.get("action") == "‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤":
            item_key = entry.get("item_key")
            sell_price = entry.get("price")

            for name, items in inventory.items():
                for item in items:
                    if item.get("item_key") == item_key:
                        buy_price = item["price"]
                        profit = sell_price - buy_price

                        table_body.append([
                            item["unique_id"],
                            name,
                            buy_price,
                            sell_price,
                            profit
                        ])

                        total_sales += sell_price
                        total_profit += profit

    if not table_body:
        embed = discord.Embed(
            title="‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Ç‡∏≤‡∏¢!",
            color=discord.Color.red(),
        )
        if not interaction.response.is_done():
            await interaction.response.send_message(embed=embed)
        return

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢ table2ascii
    output = t2a(
        header=table_header,
        body=table_body,
        style=PresetStyle.plain
    )

    embed = discord.Embed(
        title="‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        description=f"```{output}```",        color=discord.Color.green(),
    )
    embed.add_field(name="‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°", value=f"{total_sales} ‡∏ö‡∏≤‡∏ó", inline=False)
    embed.add_field(name="‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°", value=f"{total_profit} ‡∏ö‡∏≤‡∏ó", inline=False)
    embed.set_footer(text=f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠ {timestamp}")

    if not interaction.response.is_done():
        await interaction.response.send_message(embed=embed)

# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ Robux
        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ Robux
@bot.tree.command(name="rbbuy", description="‡∏£‡∏±‡∏ö Robux ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å Robux")
async def rbbuy(interaction: discord.Interaction, amount: int, rate: float):
                    if not is_user_allowed(interaction):
                        await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ!", ephemeral=True)
                        return

                    timestamp = get_thailand_time()

                    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö Robux
                    rbprofit = amount / rate

                    # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Robux
                    data_2 = load_inventory_data_2()

                    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ 'daily_rbprofit' ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á
                    if "daily_rbprofit" not in data_2:
                        data_2["daily_rbprofit"] = {}

                    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ Robux
                    date_today = datetime.now().strftime("%Y-%m-%d")
                    if date_today in data_2["daily_rbprofit"]:
                        data_2["daily_rbprofit"][date_today] += rbprofit
                    else:
                        data_2["daily_rbprofit"][date_today] = rbprofit

                    # Update the Robux balance
                    if "robux_balance" not in data_2:
                        data_2["robux_balance"] = 0  # Initial balance if not present
                    data_2["robux_balance"] += amount  # Add received Robux to balance

                    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏±‡∏ö‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå JSON
                    save_inventory_data_2(data_2)

                    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
                    log_event("‡∏£‡∏±‡∏ö Robux", f"‡∏£‡∏±‡∏ö {amount} Robux ‡πÄ‡∏£‡∏ó {rate}", rbprofit, timestamp)

                    log_message = f"üéÆ **‡∏£‡∏±‡∏ö Robux**\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: `{amount} Robux`\n‡πÄ‡∏£‡∏ó: `{rate}`\n‡πÉ‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤: `{rbprofit}` ‡∏ö‡∏≤‡∏ó\n‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠: `{timestamp}`"
                    await send_log_to_channel(bot, log_message)

                    embed = discord.Embed(
                        title="‡∏£‡∏±‡∏ö Robux",
                        description=f"‡∏£‡∏±‡∏ö {amount} Robux ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏ó {rate} ‡∏£‡∏≤‡∏Ñ‡∏≤ {rbprofit} ‡∏ö‡∏≤‡∏ó!",
                        color=discord.Color.green(),
                    )
                    embed.set_footer(text=f"‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠ {timestamp}")
                    if not interaction.response.is_done():
                        await interaction.response.send_message(embed=embed)



@bot.tree.command(name="rbprofit", description="‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ Robux")
async def rbprofit(interaction: discord.Interaction):
            timestamp = get_thailand_time()

            # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Robux
            data_2 = load_inventory_data_2()

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ 'daily_rbprofit' ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á
            if "daily_rbprofit" not in data_2:
                data_2["daily_rbprofit"] = {}

            total_rbprofit = sum(data_2["daily_rbprofit"].values())

            date_today = datetime.now().strftime("%Y-%m-%d")
            today_rbprofit = data_2["daily_rbprofit"].get(date_today, 0)

            embed = discord.Embed(
                title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ Robux",
                description=f"‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ Robux ‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ({date_today}): {today_rbprofit} ‡∏ö‡∏≤‡∏ó\n"
                            f"‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ Robux: {total_rbprofit} ‡∏ö‡∏≤‡∏ó",
                color=discord.Color.blue(),
            )
            embed.set_footer(text=f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠ {timestamp}")
            if not interaction.response.is_done():
                await interaction.response.send_message(embed=embed)

@bot.tree.command(name="rbsell", description="‡∏Ç‡∏≤‡∏¢ Robux ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å Robux")
async def rbsell(interaction: discord.Interaction, amount: int, rate: float):
                    if not is_user_allowed(interaction):
                        await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ!", ephemeral=True)
                        return

                    timestamp = get_thailand_time()

                    # Assuming you have a record of buy rates, retrieve the relevant buy rate (this should be implemented).
                    buy_rate = 50  # Replace with the actual buy rate retrieval logic
                    if rate < buy_rate:
                        loss = (buy_rate - rate) * amount
                        profit_message = f"‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô: -{loss} ‡∏ö‡∏≤‡∏ó"
                    else:
                        profit = (rate - buy_rate) * amount
                        profit_message = f"‡∏Å‡∏≥‡πÑ‡∏£: {profit} ‡∏ö‡∏≤‡∏ó"

                        profit = amount * rate

                        log_event("‡∏Ç‡∏≤‡∏¢ Robux", f"‡∏Ç‡∏≤‡∏¢ {amount} Robux ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏ó {rate}", profit, timestamp)

                    log_message = f"üí∏ **‡∏Ç‡∏≤‡∏¢ Robux**\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: `{amount} Robux`\n‡πÄ‡∏£‡∏ó: `{rate}`\n{profit_message}\n‡∏Ç‡∏≤‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠: `{timestamp}`"
                    await send_log_to_channel(bot, log_message)

                    embed = discord.Embed(
                        title="‡∏Ç‡∏≤‡∏¢ Robux",
                        description=f"‡∏Ç‡∏≤‡∏¢ {amount} Robux ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏ó {rate} {profit_message}",
                        color=discord.Color.green(),
                    )
                    embed.set_footer(text=f"‡∏Ç‡∏≤‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠ {timestamp}")
                    if not interaction.response.is_done():
                        await interaction.response.send_message(embed=embed)

# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Robux ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å
@bot.tree.command(name="rbstock", description="‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î Robux ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠")
async def rbstock(interaction: discord.Interaction):
            timestamp = get_thailand_time()

            # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Robux
            data_2 = load_inventory_data_2()

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ 'robux_balance' ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if "robux_balance" not in data_2:
                data_2["robux_balance"] = 0  # If no balance exists, initialize it.

            remaining_rb = data_2["robux_balance"]

            embed = discord.Embed(
                title="‡∏¢‡∏≠‡∏î Robux ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠",
                description=f"‡∏¢‡∏≠‡∏î Robux ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠: `{remaining_rb}`",
                color=discord.Color.blue(),
            )
            embed.set_footer(text=f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠ {timestamp}")
            if not interaction.response.is_done():
                await interaction.response.send_message(embed=embed)


@bot.tree.command(name="inventory_list", description="‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ")
async def inventory_list(interaction: discord.Interaction):
    if not inventory:
        embed = discord.Embed(
            title="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ!",
            color=discord.Color.red(),
        )
        if not interaction.response.is_done():
            await interaction.response.send_message(embed=embed)
        return


    table_header = ["‡πÄ‡∏•‡∏Ç", "‡∏ä‡∏∑‡πà‡∏≠", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", "‡∏£‡∏≤‡∏Ñ‡∏≤ (THB/USD)"] 
    table_body = []

    exchange_rate = 0.028

    for name, items in inventory.items():
        for item in items:
            price_thb = item["price"]
            price_usd = price_thb * exchange_rate
            table_body.append([
                item["unique_id"],
                name,
                item["status"],
                f"{price_thb} THB ({price_usd:.2f} USD)"
            ])

    output = t2a(
        header=table_header,
        body=table_body,
        style=PresetStyle.plain
    )

    embed = discord.Embed(
        title="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        description=f"```\n{output}\n```",
        color=discord.Color.blue(),
    )

    if not interaction.response.is_done():
        await interaction.response.send_message(embed=embed)

bot.run('')
